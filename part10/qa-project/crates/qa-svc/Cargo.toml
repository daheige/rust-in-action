[package]
name = "qa-svc"
version.workspace = true
edition.workspace = true
authors.workspace = true
description.workspace = true

# 定时任务脚本
[[bin]]
name = "qa-job"
path = "src/job.rs"

[dependencies]
# grpc相关组件
tonic = {workspace = true}
prost = {workspace = true}
tokio = {workspace = true}
# note: Must be the same as the tonic version
tonic-reflection = {workspace = true}
async-trait = { workspace = true}

# json序列化处理
serde = {workspace = true}
serde_json = {workspace = true}

# 配置文件读取以及用于消息序列化和反序列化处理
serde_yaml = {workspace = true}
once_cell = {workspace = true}

# 操作日志
log = { workspace = true }
env_logger = { workspace = true, features = ["color"] }

# tracing追踪
tracing = {workspace = true}
tracing-subscriber = { workspace = true, features = ["env-filter"] }

# chrono用于时间处理
chrono = {workspace = true}

# sqlx用于数据库操作
sqlx = { workspace = true, features = ["runtime-tokio-rustls", "mysql", "chrono", "time"] }

# pulsar消息队列相关crate
futures = { workspace = true }
pulsar = { workspace = true }

# anyhow 用于错误处理，它是Rust中的一个库，旨在提供灵活的、具体的错误处理能力
anyhow = { workspace = true }
md5 = { workspace = true }
uuid = { workspace = true, features = ["serde", "v4"] }

# 项目自定义的crates
infras = { path = "../infras" }
pb = { path = "../pb" }

# prometheus metrics
autometrics = { workspace = true }
# metrics run on axum http framework
axum = { workspace = true }

[build-dependencies]
# note: Must be the same as the tonic version
tonic-build = { workspace = true }
