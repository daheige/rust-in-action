// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: qa.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 登录请求
type UserLoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // 用户名
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 访问密码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserLoginRequest) Reset() {
	*x = UserLoginRequest{}
	mi := &file_qa_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginRequest) ProtoMessage() {}

func (x *UserLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginRequest.ProtoReflect.Descriptor instead.
func (*UserLoginRequest) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{0}
}

func (x *UserLoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserLoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 登录返回结果
type UserLoginReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // 登录成功返回的唯一标识token
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserLoginReply) Reset() {
	*x = UserLoginReply{}
	mi := &file_qa_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserLoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginReply) ProtoMessage() {}

func (x *UserLoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginReply.ProtoReflect.Descriptor instead.
func (*UserLoginReply) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{1}
}

func (x *UserLoginReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 用户退出请求，直接清理redis中的存放的数据
type UserLogoutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // 唯一标识token
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserLogoutRequest) Reset() {
	*x = UserLogoutRequest{}
	mi := &file_qa_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserLogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLogoutRequest) ProtoMessage() {}

func (x *UserLogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLogoutRequest.ProtoReflect.Descriptor instead.
func (*UserLogoutRequest) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{2}
}

func (x *UserLogoutRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 用户退出返回结果
type UserLogoutReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         int64                  `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserLogoutReply) Reset() {
	*x = UserLogoutReply{}
	mi := &file_qa_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserLogoutReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLogoutReply) ProtoMessage() {}

func (x *UserLogoutReply) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLogoutReply.ProtoReflect.Descriptor instead.
func (*UserLogoutReply) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{3}
}

func (x *UserLogoutReply) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

// 用户注册请求
type UserRegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRegisterRequest) Reset() {
	*x = UserRegisterRequest{}
	mi := &file_qa_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterRequest) ProtoMessage() {}

func (x *UserRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterRequest.ProtoReflect.Descriptor instead.
func (*UserRegisterRequest) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{4}
}

func (x *UserRegisterRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserRegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 用户注册返回结果
type UserRegisterReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         int64                  `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRegisterReply) Reset() {
	*x = UserRegisterReply{}
	mi := &file_qa_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRegisterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterReply) ProtoMessage() {}

func (x *UserRegisterReply) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterReply.ProtoReflect.Descriptor instead.
func (*UserRegisterReply) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{5}
}

func (x *UserRegisterReply) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

// 验证登录token请求
type VerifyTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                          // 登录成功后的token
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 请求id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyTokenRequest) Reset() {
	*x = VerifyTokenRequest{}
	mi := &file_qa_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTokenRequest) ProtoMessage() {}

func (x *VerifyTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTokenRequest.ProtoReflect.Descriptor instead.
func (*VerifyTokenRequest) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{6}
}

func (x *VerifyTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VerifyTokenRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// 验证token返回结果
type VerifyTokenReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         int64                  `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`      // 1表示验证成功，0验证失败
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`     // 验证失败返回具体的提示信息
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"` // 当前用户username
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyTokenReply) Reset() {
	*x = VerifyTokenReply{}
	mi := &file_qa_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTokenReply) ProtoMessage() {}

func (x *VerifyTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTokenReply.ProtoReflect.Descriptor instead.
func (*VerifyTokenReply) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{7}
}

func (x *VerifyTokenReply) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *VerifyTokenReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *VerifyTokenReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// 发表问题
type AddQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"` // 创建者
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddQuestionRequest) Reset() {
	*x = AddQuestionRequest{}
	mi := &file_qa_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddQuestionRequest) ProtoMessage() {}

func (x *AddQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddQuestionRequest.ProtoReflect.Descriptor instead.
func (*AddQuestionRequest) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{8}
}

func (x *AddQuestionRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddQuestionRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddQuestionRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

// 发表问题返回结果
type AddQuestionReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 问题id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddQuestionReply) Reset() {
	*x = AddQuestionReply{}
	mi := &file_qa_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddQuestionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddQuestionReply) ProtoMessage() {}

func (x *AddQuestionReply) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddQuestionReply.ProtoReflect.Descriptor instead.
func (*AddQuestionReply) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{9}
}

func (x *AddQuestionReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除问题请求
type DeleteQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 问题id
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQuestionRequest) Reset() {
	*x = DeleteQuestionRequest{}
	mi := &file_qa_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuestionRequest) ProtoMessage() {}

func (x *DeleteQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuestionRequest.ProtoReflect.Descriptor instead.
func (*DeleteQuestionRequest) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteQuestionRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteQuestionRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// 删除问题返回结果
type DeleteQuestionReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         int64                  `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQuestionReply) Reset() {
	*x = DeleteQuestionReply{}
	mi := &file_qa_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQuestionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuestionReply) ProtoMessage() {}

func (x *DeleteQuestionReply) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuestionReply.ProtoReflect.Descriptor instead.
func (*DeleteQuestionReply) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteQuestionReply) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

// 更新问题请求
type UpdateQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               // 问题id
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                          // 标题
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                      // 内容正文
	UpdatedBy     string                 `protobuf:"bytes,4,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"` // 更新者
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateQuestionRequest) Reset() {
	*x = UpdateQuestionRequest{}
	mi := &file_qa_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuestionRequest) ProtoMessage() {}

func (x *UpdateQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuestionRequest.ProtoReflect.Descriptor instead.
func (*UpdateQuestionRequest) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateQuestionRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateQuestionRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateQuestionRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateQuestionRequest) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

// 更新问题返回结果
type UpdateQuestionReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         int64                  `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateQuestionReply) Reset() {
	*x = UpdateQuestionReply{}
	mi := &file_qa_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQuestionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuestionReply) ProtoMessage() {}

func (x *UpdateQuestionReply) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuestionReply.ProtoReflect.Descriptor instead.
func (*UpdateQuestionReply) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateQuestionReply) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

// 答案实体
type AnswerEntity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   // 回答id
	QuestionId    uint64                 `protobuf:"varint,2,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"` // 问题id
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                          // 回答内容
	CreatedBy     string                 `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`     // 回答者
	AgreeCount    uint64                 `protobuf:"varint,5,opt,name=agree_count,json=agreeCount,proto3" json:"agree_count,omitempty"` // 点赞数，添加时默认为0
	HasAgreed     bool                   `protobuf:"varint,6,opt,name=has_agreed,json=hasAgreed,proto3" json:"has_agreed,omitempty"`    // 当前用户是否点赞
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnswerEntity) Reset() {
	*x = AnswerEntity{}
	mi := &file_qa_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnswerEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerEntity) ProtoMessage() {}

func (x *AnswerEntity) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerEntity.ProtoReflect.Descriptor instead.
func (*AnswerEntity) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{14}
}

func (x *AnswerEntity) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AnswerEntity) GetQuestionId() uint64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *AnswerEntity) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AnswerEntity) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *AnswerEntity) GetAgreeCount() uint64 {
	if x != nil {
		return x.AgreeCount
	}
	return 0
}

func (x *AnswerEntity) GetHasAgreed() bool {
	if x != nil {
		return x.HasAgreed
	}
	return false
}

// 添加答案
type AddAnswerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Answer        *AnswerEntity          `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAnswerRequest) Reset() {
	*x = AddAnswerRequest{}
	mi := &file_qa_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAnswerRequest) ProtoMessage() {}

func (x *AddAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAnswerRequest.ProtoReflect.Descriptor instead.
func (*AddAnswerRequest) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{15}
}

func (x *AddAnswerRequest) GetAnswer() *AnswerEntity {
	if x != nil {
		return x.Answer
	}
	return nil
}

// 添加回答返回结果
type AddAnswerReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 回答唯一标识
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAnswerReply) Reset() {
	*x = AddAnswerReply{}
	mi := &file_qa_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAnswerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAnswerReply) ProtoMessage() {}

func (x *AddAnswerReply) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAnswerReply.ProtoReflect.Descriptor instead.
func (*AddAnswerReply) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{16}
}

func (x *AddAnswerReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除回答
type DeleteAnswerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            // 回答id
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"` // 默认当前用户
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAnswerRequest) Reset() {
	*x = DeleteAnswerRequest{}
	mi := &file_qa_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnswerRequest) ProtoMessage() {}

func (x *DeleteAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnswerRequest.ProtoReflect.Descriptor instead.
func (*DeleteAnswerRequest) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteAnswerRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteAnswerRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// 删除回答返回结果
type DeleteAnswerReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         int64                  `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAnswerReply) Reset() {
	*x = DeleteAnswerReply{}
	mi := &file_qa_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAnswerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnswerReply) ProtoMessage() {}

func (x *DeleteAnswerReply) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnswerReply.ProtoReflect.Descriptor instead.
func (*DeleteAnswerReply) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteAnswerReply) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

// 更新回答基本信息
type UpdateAnswerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            // 回答id
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`   // 回答内容
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"` // 用户名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAnswerRequest) Reset() {
	*x = UpdateAnswerRequest{}
	mi := &file_qa_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnswerRequest) ProtoMessage() {}

func (x *UpdateAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnswerRequest.ProtoReflect.Descriptor instead.
func (*UpdateAnswerRequest) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateAnswerRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAnswerRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateAnswerRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// 更新回答返回结果
type UpdateAnswerReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         int64                  `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAnswerReply) Reset() {
	*x = UpdateAnswerReply{}
	mi := &file_qa_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAnswerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnswerReply) ProtoMessage() {}

func (x *UpdateAnswerReply) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnswerReply.ProtoReflect.Descriptor instead.
func (*UpdateAnswerReply) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateAnswerReply) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

// 回答点赞请求
type AnswerAgreeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               // 回答id
	CreatedBy     string                 `protobuf:"bytes,2,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"` // 用户名
	Action        string                 `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`                        // up表示点赞，cancel表示取消点赞
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnswerAgreeRequest) Reset() {
	*x = AnswerAgreeRequest{}
	mi := &file_qa_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnswerAgreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerAgreeRequest) ProtoMessage() {}

func (x *AnswerAgreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerAgreeRequest.ProtoReflect.Descriptor instead.
func (*AnswerAgreeRequest) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{21}
}

func (x *AnswerAgreeRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AnswerAgreeRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *AnswerAgreeRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// 回答点赞返回结果
type AnswerAgreeReply struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	State  int64                  `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`  // 操作成功
	Reason string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"` // 操作提示信息
	// 这个点赞数相对来说是准确的，如果高并发场景下，它等于点赞增量数+点赞之前的数字
	// 一般来说，点赞成功后，前端可以自行自增或自减
	// 可以根据实际业务场景，看是否需要返回这个数字
	AgreeCount    uint64 `protobuf:"varint,3,opt,name=agree_count,json=agreeCount,proto3" json:"agree_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnswerAgreeReply) Reset() {
	*x = AnswerAgreeReply{}
	mi := &file_qa_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnswerAgreeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerAgreeReply) ProtoMessage() {}

func (x *AnswerAgreeReply) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerAgreeReply.ProtoReflect.Descriptor instead.
func (*AnswerAgreeReply) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{22}
}

func (x *AnswerAgreeReply) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *AnswerAgreeReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AnswerAgreeReply) GetAgreeCount() uint64 {
	if x != nil {
		return x.AgreeCount
	}
	return 0
}

// 问题详情请求
type QuestionDetailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            // 问题id
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"` // 当前用户
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionDetailRequest) Reset() {
	*x = QuestionDetailRequest{}
	mi := &file_qa_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionDetailRequest) ProtoMessage() {}

func (x *QuestionDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionDetailRequest.ProtoReflect.Descriptor instead.
func (*QuestionDetailRequest) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{23}
}

func (x *QuestionDetailRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuestionDetailRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// 问题详情，返回结果
type QuestionDetailReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Question      *QuestionEntity        `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionDetailReply) Reset() {
	*x = QuestionDetailReply{}
	mi := &file_qa_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionDetailReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionDetailReply) ProtoMessage() {}

func (x *QuestionDetailReply) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionDetailReply.ProtoReflect.Descriptor instead.
func (*QuestionDetailReply) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{24}
}

func (x *QuestionDetailReply) GetQuestion() *QuestionEntity {
	if x != nil {
		return x.Question
	}
	return nil
}

// 问题实体
type QuestionEntity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   // 问题id
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                              // 问题标题
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                          // 内容，这里只返回部分内容
	CreatedBy     string                 `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`     // 创建者
	ReadCount     uint64                 `protobuf:"varint,5,opt,name=read_count,json=readCount,proto3" json:"read_count,omitempty"`    // 问题阅读数
	ReplyCount    uint64                 `protobuf:"varint,6,opt,name=reply_count,json=replyCount,proto3" json:"reply_count,omitempty"` // 回答数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionEntity) Reset() {
	*x = QuestionEntity{}
	mi := &file_qa_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionEntity) ProtoMessage() {}

func (x *QuestionEntity) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionEntity.ProtoReflect.Descriptor instead.
func (*QuestionEntity) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{25}
}

func (x *QuestionEntity) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuestionEntity) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QuestionEntity) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *QuestionEntity) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *QuestionEntity) GetReadCount() uint64 {
	if x != nil {
		return x.ReadCount
	}
	return 0
}

func (x *QuestionEntity) GetReplyCount() uint64 {
	if x != nil {
		return x.ReplyCount
	}
	return 0
}

// 最新问题列表
type LatestQuestionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`            // 用户名
	LastId        uint64                 `protobuf:"varint,2,opt,name=last_id,json=lastId,proto3" json:"last_id,omitempty"` // 上一次的question_id，第一页默认为0
	Limit         uint64                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestQuestionsRequest) Reset() {
	*x = LatestQuestionsRequest{}
	mi := &file_qa_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestQuestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestQuestionsRequest) ProtoMessage() {}

func (x *LatestQuestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestQuestionsRequest.ProtoReflect.Descriptor instead.
func (*LatestQuestionsRequest) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{26}
}

func (x *LatestQuestionsRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LatestQuestionsRequest) GetLastId() uint64 {
	if x != nil {
		return x.LastId
	}
	return 0
}

func (x *LatestQuestionsRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 最新问题列表返回结果
type LatestQuestionsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*QuestionEntity      `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	LastId        uint64                 `protobuf:"varint,2,opt,name=last_id,json=lastId,proto3" json:"last_id,omitempty"` // 上一次的question_id
	IsEnd         bool                   `protobuf:"varint,3,opt,name=is_end,json=isEnd,proto3" json:"is_end,omitempty"`    // 是否到底了
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestQuestionsReply) Reset() {
	*x = LatestQuestionsReply{}
	mi := &file_qa_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestQuestionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestQuestionsReply) ProtoMessage() {}

func (x *LatestQuestionsReply) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestQuestionsReply.ProtoReflect.Descriptor instead.
func (*LatestQuestionsReply) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{27}
}

func (x *LatestQuestionsReply) GetList() []*QuestionEntity {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *LatestQuestionsReply) GetLastId() uint64 {
	if x != nil {
		return x.LastId
	}
	return 0
}

func (x *LatestQuestionsReply) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

// 问题下的回答接口
type AnswerListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuestionId    uint64                 `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"` // 问题id
	Page          uint64                 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                               // 当前页数
	Limit         uint64                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`                             // 每页数据
	Username      string                 `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`                        // 当前用户
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnswerListRequest) Reset() {
	*x = AnswerListRequest{}
	mi := &file_qa_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnswerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerListRequest) ProtoMessage() {}

func (x *AnswerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerListRequest.ProtoReflect.Descriptor instead.
func (*AnswerListRequest) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{28}
}

func (x *AnswerListRequest) GetQuestionId() uint64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *AnswerListRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AnswerListRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AnswerListRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// 回答列表返回结果
type AnswerListReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*AnswerEntity        `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total         uint64                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	TotalPage     uint64                 `protobuf:"varint,3,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	PageSize      uint64                 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`          // 每页显示个数
	CurrentPage   uint64                 `protobuf:"varint,5,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"` // 当前第几页
	IsEnd         bool                   `protobuf:"varint,6,opt,name=is_end,json=isEnd,proto3" json:"is_end,omitempty"`                   // 数据是否到底了
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnswerListReply) Reset() {
	*x = AnswerListReply{}
	mi := &file_qa_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnswerListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerListReply) ProtoMessage() {}

func (x *AnswerListReply) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerListReply.ProtoReflect.Descriptor instead.
func (*AnswerListReply) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{29}
}

func (x *AnswerListReply) GetList() []*AnswerEntity {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AnswerListReply) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AnswerListReply) GetTotalPage() uint64 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *AnswerListReply) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AnswerListReply) GetCurrentPage() uint64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *AnswerListReply) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

// 查看回答详情
type AnswerDetailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            // 回答id
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"` // 当前用户
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnswerDetailRequest) Reset() {
	*x = AnswerDetailRequest{}
	mi := &file_qa_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnswerDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerDetailRequest) ProtoMessage() {}

func (x *AnswerDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerDetailRequest.ProtoReflect.Descriptor instead.
func (*AnswerDetailRequest) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{30}
}

func (x *AnswerDetailRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AnswerDetailRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// 回答详情结果
type AnswerDetailReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Answer        *AnswerEntity          `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnswerDetailReply) Reset() {
	*x = AnswerDetailReply{}
	mi := &file_qa_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnswerDetailReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerDetailReply) ProtoMessage() {}

func (x *AnswerDetailReply) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerDetailReply.ProtoReflect.Descriptor instead.
func (*AnswerDetailReply) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{31}
}

func (x *AnswerDetailReply) GetAnswer() *AnswerEntity {
	if x != nil {
		return x.Answer
	}
	return nil
}

var File_qa_proto protoreflect.FileDescriptor

var file_qa_proto_rawDesc = []byte{
	0x0a, 0x08, 0x71, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x71, 0x61, 0x22, 0x4a,
	0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x26, 0x0a, 0x0e, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x29, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x27, 0x0a,
	0x0f, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x4d, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x29, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x49, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x10, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x22,
	0x0a, 0x10, 0x41, 0x64, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x43, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x76, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x2b, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x0c, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x72, 0x65, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x67, 0x72, 0x65, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x41, 0x67,
	0x72, 0x65, 0x65, 0x64, 0x22, 0x3c, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x61, 0x2e, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x22, 0x20, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x5b, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x29, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x5b, 0x0a, 0x12, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x61, 0x0a, 0x10, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x15, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x45, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x61, 0x2e, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xaf, 0x01, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x16, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6e, 0x0a,
	0x14, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x22, 0x7a, 0x0a,
	0x11, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x0f, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x61,
	0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x65,
	0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x22,
	0x41, 0x0a, 0x13, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x11, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x61, 0x2e, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x32, 0xbf, 0x07, 0x0a, 0x09, 0x51, 0x41, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x35, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x2e, 0x71,
	0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x71, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x12, 0x15, 0x2e, 0x71, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x71, 0x61,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x3e, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x17, 0x2e, 0x71, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x71, 0x61, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x3b, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x16, 0x2e, 0x71, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x71, 0x61, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a,
	0x0b, 0x41, 0x64, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x71,
	0x61, 0x2e, 0x41, 0x64, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x71, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x44, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x71,
	0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x71, 0x61, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x44, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x71, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x71, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x44, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x71, 0x61, 0x2e, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x71, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x47, 0x0a, 0x0f,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1a, 0x2e, 0x71, 0x61, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x71, 0x61,
	0x2e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x0a, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x71, 0x61, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x71, 0x61, 0x2e,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x35, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x71,
	0x61, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x71, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x71, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x71, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x71, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x71, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x2e, 0x71, 0x61, 0x2e, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x71, 0x61, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x41, 0x67, 0x72, 0x65, 0x65, 0x12, 0x16, 0x2e, 0x71, 0x61, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x71, 0x61, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x42, 0x2b, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0xca, 0x02, 0x0b, 0x41, 0x70,
	0x70, 0x5c, 0x47, 0x72, 0x70, 0x63, 0x5c, 0x51, 0x61, 0xe2, 0x02, 0x14, 0x41, 0x70, 0x70, 0x5c,
	0x47, 0x72, 0x70, 0x63, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qa_proto_rawDescOnce sync.Once
	file_qa_proto_rawDescData = file_qa_proto_rawDesc
)

func file_qa_proto_rawDescGZIP() []byte {
	file_qa_proto_rawDescOnce.Do(func() {
		file_qa_proto_rawDescData = protoimpl.X.CompressGZIP(file_qa_proto_rawDescData)
	})
	return file_qa_proto_rawDescData
}

var file_qa_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_qa_proto_goTypes = []any{
	(*UserLoginRequest)(nil),       // 0: qa.UserLoginRequest
	(*UserLoginReply)(nil),         // 1: qa.UserLoginReply
	(*UserLogoutRequest)(nil),      // 2: qa.UserLogoutRequest
	(*UserLogoutReply)(nil),        // 3: qa.UserLogoutReply
	(*UserRegisterRequest)(nil),    // 4: qa.UserRegisterRequest
	(*UserRegisterReply)(nil),      // 5: qa.UserRegisterReply
	(*VerifyTokenRequest)(nil),     // 6: qa.VerifyTokenRequest
	(*VerifyTokenReply)(nil),       // 7: qa.VerifyTokenReply
	(*AddQuestionRequest)(nil),     // 8: qa.AddQuestionRequest
	(*AddQuestionReply)(nil),       // 9: qa.AddQuestionReply
	(*DeleteQuestionRequest)(nil),  // 10: qa.DeleteQuestionRequest
	(*DeleteQuestionReply)(nil),    // 11: qa.DeleteQuestionReply
	(*UpdateQuestionRequest)(nil),  // 12: qa.UpdateQuestionRequest
	(*UpdateQuestionReply)(nil),    // 13: qa.UpdateQuestionReply
	(*AnswerEntity)(nil),           // 14: qa.AnswerEntity
	(*AddAnswerRequest)(nil),       // 15: qa.AddAnswerRequest
	(*AddAnswerReply)(nil),         // 16: qa.AddAnswerReply
	(*DeleteAnswerRequest)(nil),    // 17: qa.DeleteAnswerRequest
	(*DeleteAnswerReply)(nil),      // 18: qa.DeleteAnswerReply
	(*UpdateAnswerRequest)(nil),    // 19: qa.UpdateAnswerRequest
	(*UpdateAnswerReply)(nil),      // 20: qa.UpdateAnswerReply
	(*AnswerAgreeRequest)(nil),     // 21: qa.AnswerAgreeRequest
	(*AnswerAgreeReply)(nil),       // 22: qa.AnswerAgreeReply
	(*QuestionDetailRequest)(nil),  // 23: qa.QuestionDetailRequest
	(*QuestionDetailReply)(nil),    // 24: qa.QuestionDetailReply
	(*QuestionEntity)(nil),         // 25: qa.QuestionEntity
	(*LatestQuestionsRequest)(nil), // 26: qa.LatestQuestionsRequest
	(*LatestQuestionsReply)(nil),   // 27: qa.LatestQuestionsReply
	(*AnswerListRequest)(nil),      // 28: qa.AnswerListRequest
	(*AnswerListReply)(nil),        // 29: qa.AnswerListReply
	(*AnswerDetailRequest)(nil),    // 30: qa.AnswerDetailRequest
	(*AnswerDetailReply)(nil),      // 31: qa.AnswerDetailReply
}
var file_qa_proto_depIdxs = []int32{
	14, // 0: qa.AddAnswerRequest.answer:type_name -> qa.AnswerEntity
	25, // 1: qa.QuestionDetailReply.question:type_name -> qa.QuestionEntity
	25, // 2: qa.LatestQuestionsReply.list:type_name -> qa.QuestionEntity
	14, // 3: qa.AnswerListReply.list:type_name -> qa.AnswerEntity
	14, // 4: qa.AnswerDetailReply.answer:type_name -> qa.AnswerEntity
	0,  // 5: qa.QAService.UserLogin:input_type -> qa.UserLoginRequest
	2,  // 6: qa.QAService.UserLogout:input_type -> qa.UserLogoutRequest
	4,  // 7: qa.QAService.UserRegister:input_type -> qa.UserRegisterRequest
	6,  // 8: qa.QAService.VerifyToken:input_type -> qa.VerifyTokenRequest
	8,  // 9: qa.QAService.AddQuestion:input_type -> qa.AddQuestionRequest
	10, // 10: qa.QAService.DeleteQuestion:input_type -> qa.DeleteQuestionRequest
	12, // 11: qa.QAService.UpdateQuestion:input_type -> qa.UpdateQuestionRequest
	23, // 12: qa.QAService.QuestionDetail:input_type -> qa.QuestionDetailRequest
	26, // 13: qa.QAService.LatestQuestions:input_type -> qa.LatestQuestionsRequest
	28, // 14: qa.QAService.AnswerList:input_type -> qa.AnswerListRequest
	15, // 15: qa.QAService.AddAnswer:input_type -> qa.AddAnswerRequest
	17, // 16: qa.QAService.DeleteAnswer:input_type -> qa.DeleteAnswerRequest
	19, // 17: qa.QAService.UpdateAnswer:input_type -> qa.UpdateAnswerRequest
	30, // 18: qa.QAService.AnswerDetail:input_type -> qa.AnswerDetailRequest
	21, // 19: qa.QAService.AnswerAgree:input_type -> qa.AnswerAgreeRequest
	1,  // 20: qa.QAService.UserLogin:output_type -> qa.UserLoginReply
	3,  // 21: qa.QAService.UserLogout:output_type -> qa.UserLogoutReply
	5,  // 22: qa.QAService.UserRegister:output_type -> qa.UserRegisterReply
	7,  // 23: qa.QAService.VerifyToken:output_type -> qa.VerifyTokenReply
	9,  // 24: qa.QAService.AddQuestion:output_type -> qa.AddQuestionReply
	11, // 25: qa.QAService.DeleteQuestion:output_type -> qa.DeleteQuestionReply
	13, // 26: qa.QAService.UpdateQuestion:output_type -> qa.UpdateQuestionReply
	24, // 27: qa.QAService.QuestionDetail:output_type -> qa.QuestionDetailReply
	27, // 28: qa.QAService.LatestQuestions:output_type -> qa.LatestQuestionsReply
	29, // 29: qa.QAService.AnswerList:output_type -> qa.AnswerListReply
	16, // 30: qa.QAService.AddAnswer:output_type -> qa.AddAnswerReply
	18, // 31: qa.QAService.DeleteAnswer:output_type -> qa.DeleteAnswerReply
	20, // 32: qa.QAService.UpdateAnswer:output_type -> qa.UpdateAnswerReply
	31, // 33: qa.QAService.AnswerDetail:output_type -> qa.AnswerDetailReply
	22, // 34: qa.QAService.AnswerAgree:output_type -> qa.AnswerAgreeReply
	20, // [20:35] is the sub-list for method output_type
	5,  // [5:20] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_qa_proto_init() }
func file_qa_proto_init() {
	if File_qa_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qa_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qa_proto_goTypes,
		DependencyIndexes: file_qa_proto_depIdxs,
		MessageInfos:      file_qa_proto_msgTypes,
	}.Build()
	File_qa_proto = out.File
	file_qa_proto_rawDesc = nil
	file_qa_proto_goTypes = nil
	file_qa_proto_depIdxs = nil
}
