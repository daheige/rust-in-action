syntax = "proto3";

// protoc 3.11.4+以上版本请用这个
option go_package = ".;pb";

package qa; // 默认的package为qa

// php 命名空间定义
option php_namespace = "App\\Grpc\\Qa";
option php_metadata_namespace = "App\\Grpc\\GPBMetadata";

// QA微服务接口定义
service QAService {
  // 用户登录
  rpc UserLogin(UserLoginRequest) returns (UserLoginReply);

  // 用户退出
  rpc UserLogout(UserLogoutRequest) returns(UserLogoutReply);

  // 用户注册
  rpc UserRegister(UserRegisterRequest) returns(UserRegisterReply);

  // 验证登录的token是否有效
  rpc VerifyToken(VerifyTokenRequest) returns(VerifyTokenReply);

  // 发表问题
  rpc AddQuestion(AddQuestionRequest) returns (AddQuestionReply);

  // 删除问题
  rpc DeleteQuestion(DeleteQuestionRequest) returns(DeleteQuestionReply);

  // 修改问题
  rpc UpdateQuestion(UpdateQuestionRequest) returns (UpdateQuestionReply);

  // 查看问题详情
  rpc QuestionDetail(QuestionDetailRequest) returns(QuestionDetailReply);

  // 最新问题列表（采用下拉分页形式获取数据，按照id desc倒序）
  rpc LatestQuestions(LatestQuestionsRequest) returns(LatestQuestionsReply);

  // 回答列表
  rpc AnswerList(AnswerListRequest) returns(AnswerListReply);

  // 添加问题回答
  rpc AddAnswer(AddAnswerRequest) returns (AddAnswerReply);

  // 删除问题对应的回答
  rpc DeleteAnswer(DeleteAnswerRequest) returns(DeleteAnswerReply);

  // 修改回答
  rpc UpdateAnswer(UpdateAnswerRequest) returns (UpdateAnswerReply);

  // 查看答案详情
  rpc AnswerDetail(AnswerDetailRequest) returns(AnswerDetailReply);

  // 用户点赞回答和取消点赞
  rpc AnswerAgree(AnswerAgreeRequest) returns(AnswerAgreeReply);
}

// 登录请求
message UserLoginRequest {
  string username = 1; // 用户名
  string password = 2; // 访问密码
}

// 登录返回结果
message UserLoginReply {
  string token = 1; // 登录成功返回的唯一标识token
}

// 用户退出请求，直接清理redis中的存放的数据
message UserLogoutRequest {
  string token = 1; // 唯一标识token
}

// 用户退出返回结果
message UserLogoutReply {
  int64 state = 1;
}

// 用户注册请求
message UserRegisterRequest {
  string username = 1;
  string password = 2;
}

// 用户注册返回结果
message UserRegisterReply {
  int64 state = 1;
}

// 验证登录token请求
message VerifyTokenRequest {
  string token = 1; // 登录成功后的token
  string request_id = 2; // 请求id
}

// 验证token返回结果
message VerifyTokenReply {
  int64 state = 1; // 1表示验证成功，0验证失败
  string reason = 2; // 验证失败返回具体的提示信息
  string username = 3; // 当前用户username
}

// 发表问题
message AddQuestionRequest {
  string title = 1;
  string content = 2;
  string created_by = 3; // 创建者
}

// 发表问题返回结果
message AddQuestionReply {
  uint64 id = 1; // 问题id
}

// 删除问题请求
message DeleteQuestionRequest {
  uint64 id = 1; // 问题id
  string username = 2;
}

// 删除问题返回结果
message DeleteQuestionReply {
  int64 state = 1;
}

// 更新问题请求
message UpdateQuestionRequest {
  uint64 id = 1; // 问题id
  string title = 2; // 标题
  string content = 3; // 内容正文
  string updated_by = 4; // 更新者
}

// 更新问题返回结果
message UpdateQuestionReply {
  int64 state = 1;
}

// 答案实体
message AnswerEntity {
  uint64 id = 1; // 回答id
  uint64 question_id = 2; // 问题id
  string content = 3; // 回答内容
  string created_by = 4; // 回答者
  uint64 agree_count = 5; // 点赞数，添加时默认为0
  bool has_agreed = 6; // 当前用户是否点赞
}

// 添加答案
message AddAnswerRequest {
  AnswerEntity answer = 1;
}

// 添加回答返回结果
message AddAnswerReply {
  uint64 id = 1; // 回答唯一标识
}

// 删除回答
message DeleteAnswerRequest {
  uint64  id = 1; // 回答id
  string username = 2; // 默认当前用户
}

// 删除回答返回结果
message DeleteAnswerReply {
  int64 state = 1;
}

// 更新回答基本信息
message UpdateAnswerRequest {
  uint64  id = 1; // 回答id
  string content = 2; // 回答内容
  string username = 3; // 用户名
}

// 更新回答返回结果
message UpdateAnswerReply {
  int64 state = 1;
}

// 回答点赞请求
message AnswerAgreeRequest {
  uint64 id = 1; // 回答id
  string created_by = 2; // 用户名
  string action = 3; // up表示点赞，cancel表示取消点赞
}

// 回答点赞返回结果
message AnswerAgreeReply {
  int64 state = 1; // 操作成功
  string reason = 2; // 操作提示信息

  // 这个点赞数相对来说是准确的，如果高并发场景下，它等于点赞增量数+点赞之前的数字
  // 一般来说，点赞成功后，前端可以自行自增或自减
  // 可以根据实际业务场景，看是否需要返回这个数字
  uint64 agree_count = 3;
}

// 问题详情请求
message QuestionDetailRequest {
  uint64 id = 1; // 问题id
  string username = 2; // 当前用户
}

// 问题详情，返回结果
message QuestionDetailReply {
  QuestionEntity question = 1;
}

// 问题实体
message QuestionEntity {
  uint64 id = 1; // 问题id
  string title = 2; // 问题标题
  string content = 3; // 内容，这里只返回部分内容
  string created_by = 4; // 创建者
  uint64 read_count = 5; // 问题阅读数
  uint64 reply_count = 6; // 回答数量
}

// 最新问题列表
message LatestQuestionsRequest {
  string username = 1; // 用户名
  uint64 last_id = 2; // 上一次的question_id，第一页默认为0
  uint64 limit = 3;
}

// 最新问题列表返回结果
message LatestQuestionsReply {
  repeated QuestionEntity list = 1;
  uint64 last_id = 2; // 上一次的question_id
  bool is_end = 3; // 是否到底了
}

// 问题下的回答接口
message AnswerListRequest {
  uint64 question_id = 1; // 问题id
  uint64 page = 2; // 当前页数
  uint64 limit = 3; // 每页数据
  string username = 4; // 当前用户
}

// 回答列表返回结果
message AnswerListReply {
  repeated AnswerEntity list = 1;
  uint64 total = 2;
  uint64 total_page = 3;
  uint64 page_size = 4; // 每页显示个数
  uint64 current_page = 5; // 当前第几页
  bool is_end = 6; // 数据是否到底了
}

// 查看回答详情
message AnswerDetailRequest {
  uint64 id = 1; // 回答id
  string username = 2; // 当前用户
}

// 回答详情结果
message AnswerDetailReply {
  AnswerEntity answer = 1;
}
